/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.domain.jooq.tables.pojos;

import jakarta.validation.constraints.Size;
import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Link implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String url;
    private String questionId;
    private String ownerName;
    private String repositoryName;
    private Long answerCount;
    private Long commitsCount;
    private OffsetDateTime updatedAt;
    private OffsetDateTime lastCheckTime;
    private OffsetDateTime createdAt;
    private String createdBy;

    public Link() {
    }

    public Link(Link value) {
        this.id = value.id;
        this.url = value.url;
        this.questionId = value.questionId;
        this.ownerName = value.ownerName;
        this.repositoryName = value.repositoryName;
        this.answerCount = value.answerCount;
        this.commitsCount = value.commitsCount;
        this.updatedAt = value.updatedAt;
        this.lastCheckTime = value.lastCheckTime;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
    }

    @ConstructorProperties({"id", "url", "questionId", "ownerName", "repositoryName", "answerCount", "commitsCount",
        "updatedAt", "lastCheckTime", "createdAt", "createdBy"})
    public Link(
        @Nullable Long id,
        @NotNull String url,
        @Nullable String questionId,
        @Nullable String ownerName,
        @Nullable String repositoryName,
        @Nullable Long answerCount,
        @Nullable Long commitsCount,
        @NotNull OffsetDateTime updatedAt,
        @NotNull OffsetDateTime lastCheckTime,
        @NotNull OffsetDateTime createdAt,
        @NotNull String createdBy
    ) {
        this.id = id;
        this.url = url;
        this.questionId = questionId;
        this.ownerName = ownerName;
        this.repositoryName = repositoryName;
        this.answerCount = answerCount;
        this.commitsCount = commitsCount;
        this.updatedAt = updatedAt;
        this.lastCheckTime = lastCheckTime;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
    }

    /**
     * Getter for <code>LINK.ID</code>.
     */
    @Nullable
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>LINK.ID</code>.
     */
    public void setId(@Nullable Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>LINK.URL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>LINK.URL</code>.
     */
    public void setUrl(@NotNull String url) {
        this.url = url;
    }

    /**
     * Getter for <code>LINK.QUESTION_ID</code>.
     */
    @Size(max = 1000000000)
    @Nullable
    public String getQuestionId() {
        return this.questionId;
    }

    /**
     * Setter for <code>LINK.QUESTION_ID</code>.
     */
    public void setQuestionId(@Nullable String questionId) {
        this.questionId = questionId;
    }

    /**
     * Getter for <code>LINK.OWNER_NAME</code>.
     */
    @Size(max = 1000000000)
    @Nullable
    public String getOwnerName() {
        return this.ownerName;
    }

    /**
     * Setter for <code>LINK.OWNER_NAME</code>.
     */
    public void setOwnerName(@Nullable String ownerName) {
        this.ownerName = ownerName;
    }

    /**
     * Getter for <code>LINK.REPOSITORY_NAME</code>.
     */
    @Size(max = 1000000000)
    @Nullable
    public String getRepositoryName() {
        return this.repositoryName;
    }

    /**
     * Setter for <code>LINK.REPOSITORY_NAME</code>.
     */
    public void setRepositoryName(@Nullable String repositoryName) {
        this.repositoryName = repositoryName;
    }

    /**
     * Getter for <code>LINK.ANSWER_COUNT</code>.
     */
    @Nullable
    public Long getAnswerCount() {
        return this.answerCount;
    }

    /**
     * Setter for <code>LINK.ANSWER_COUNT</code>.
     */
    public void setAnswerCount(@Nullable Long answerCount) {
        this.answerCount = answerCount;
    }

    /**
     * Getter for <code>LINK.COMMITS_COUNT</code>.
     */
    @Nullable
    public Long getCommitsCount() {
        return this.commitsCount;
    }

    /**
     * Setter for <code>LINK.COMMITS_COUNT</code>.
     */
    public void setCommitsCount(@Nullable Long commitsCount) {
        this.commitsCount = commitsCount;
    }

    /**
     * Getter for <code>LINK.UPDATED_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>LINK.UPDATED_AT</code>.
     */
    public void setUpdatedAt(@NotNull OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>LINK.LAST_CHECK_TIME</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getLastCheckTime() {
        return this.lastCheckTime;
    }

    /**
     * Setter for <code>LINK.LAST_CHECK_TIME</code>.
     */
    public void setLastCheckTime(@NotNull OffsetDateTime lastCheckTime) {
        this.lastCheckTime = lastCheckTime;
    }

    /**
     * Getter for <code>LINK.CREATED_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>LINK.CREATED_AT</code>.
     */
    public void setCreatedAt(@NotNull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>LINK.CREATED_BY</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>LINK.CREATED_BY</code>.
     */
    public void setCreatedBy(@NotNull String createdBy) {
        this.createdBy = createdBy;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Link other = (Link) obj;
        if (this.id == null) {
            if (other.id != null) {
                return false;
            }
        } else if (!this.id.equals(other.id)) {
            return false;
        }
        if (this.url == null) {
            if (other.url != null) {
                return false;
            }
        } else if (!this.url.equals(other.url)) {
            return false;
        }
        if (this.questionId == null) {
            if (other.questionId != null) {
                return false;
            }
        } else if (!this.questionId.equals(other.questionId)) {
            return false;
        }
        if (this.ownerName == null) {
            if (other.ownerName != null) {
                return false;
            }
        } else if (!this.ownerName.equals(other.ownerName)) {
            return false;
        }
        if (this.repositoryName == null) {
            if (other.repositoryName != null) {
                return false;
            }
        } else if (!this.repositoryName.equals(other.repositoryName)) {
            return false;
        }
        if (this.answerCount == null) {
            if (other.answerCount != null) {
                return false;
            }
        } else if (!this.answerCount.equals(other.answerCount)) {
            return false;
        }
        if (this.commitsCount == null) {
            if (other.commitsCount != null) {
                return false;
            }
        } else if (!this.commitsCount.equals(other.commitsCount)) {
            return false;
        }
        if (this.updatedAt == null) {
            if (other.updatedAt != null) {
                return false;
            }
        } else if (!this.updatedAt.equals(other.updatedAt)) {
            return false;
        }
        if (this.lastCheckTime == null) {
            if (other.lastCheckTime != null) {
                return false;
            }
        } else if (!this.lastCheckTime.equals(other.lastCheckTime)) {
            return false;
        }
        if (this.createdAt == null) {
            if (other.createdAt != null) {
                return false;
            }
        } else if (!this.createdAt.equals(other.createdAt)) {
            return false;
        }
        if (this.createdBy == null) {
            if (other.createdBy != null) {
                return false;
            }
        } else if (!this.createdBy.equals(other.createdBy)) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.questionId == null) ? 0 : this.questionId.hashCode());
        result = prime * result + ((this.ownerName == null) ? 0 : this.ownerName.hashCode());
        result = prime * result + ((this.repositoryName == null) ? 0 : this.repositoryName.hashCode());
        result = prime * result + ((this.answerCount == null) ? 0 : this.answerCount.hashCode());
        result = prime * result + ((this.commitsCount == null) ? 0 : this.commitsCount.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.lastCheckTime == null) ? 0 : this.lastCheckTime.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Link (");

        sb.append(id);
        sb.append(", ").append(url);
        sb.append(", ").append(questionId);
        sb.append(", ").append(ownerName);
        sb.append(", ").append(repositoryName);
        sb.append(", ").append(answerCount);
        sb.append(", ").append(commitsCount);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(lastCheckTime);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);

        sb.append(")");
        return sb.toString();
    }
}
