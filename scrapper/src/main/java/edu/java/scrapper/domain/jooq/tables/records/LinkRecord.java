/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.domain.jooq.tables.records;

import edu.java.scrapper.domain.jooq.tables.Link;
import jakarta.validation.constraints.Size;
import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class LinkRecord extends UpdatableRecordImpl<LinkRecord> implements
    Record11<Long, String, String, String, String, Long, Long, OffsetDateTime, OffsetDateTime, OffsetDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>LINK.ID</code>.
     */
    public void setId(@Nullable Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>LINK.ID</code>.
     */
    @Nullable
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>LINK.URL</code>.
     */
    public void setUrl(@NotNull String value) {
        set(1, value);
    }

    /**
     * Getter for <code>LINK.URL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>LINK.QUESTION_ID</code>.
     */
    public void setQuestionId(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for <code>LINK.QUESTION_ID</code>.
     */
    @Size(max = 1000000000)
    @Nullable
    public String getQuestionId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>LINK.OWNER_NAME</code>.
     */
    public void setOwnerName(@Nullable String value) {
        set(3, value);
    }

    /**
     * Getter for <code>LINK.OWNER_NAME</code>.
     */
    @Size(max = 1000000000)
    @Nullable
    public String getOwnerName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>LINK.REPOSITORY_NAME</code>.
     */
    public void setRepositoryName(@Nullable String value) {
        set(4, value);
    }

    /**
     * Getter for <code>LINK.REPOSITORY_NAME</code>.
     */
    @Size(max = 1000000000)
    @Nullable
    public String getRepositoryName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>LINK.ANSWER_COUNT</code>.
     */
    public void setAnswerCount(@Nullable Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>LINK.ANSWER_COUNT</code>.
     */
    @Nullable
    public Long getAnswerCount() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>LINK.COMMITS_COUNT</code>.
     */
    public void setCommitsCount(@Nullable Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>LINK.COMMITS_COUNT</code>.
     */
    @Nullable
    public Long getCommitsCount() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>LINK.UPDATED_AT</code>.
     */
    public void setUpdatedAt(@NotNull OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>LINK.UPDATED_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>LINK.LAST_CHECK_TIME</code>.
     */
    public void setLastCheckTime(@NotNull OffsetDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>LINK.LAST_CHECK_TIME</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getLastCheckTime() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for <code>LINK.CREATED_AT</code>.
     */
    public void setCreatedAt(@NotNull OffsetDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>LINK.CREATED_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(9);
    }

    /**
     * Setter for <code>LINK.CREATED_BY</code>.
     */
    public void setCreatedBy(@NotNull String value) {
        set(10, value);
    }

    /**
     * Getter for <code>LINK.CREATED_BY</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getCreatedBy() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row11<Long, String, String, String, String, Long, Long, OffsetDateTime, OffsetDateTime, OffsetDateTime, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row11<Long, String, String, String, String, Long, Long, OffsetDateTime, OffsetDateTime, OffsetDateTime, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return Link.LINK.ID;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return Link.LINK.URL;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return Link.LINK.QUESTION_ID;
    }

    @Override
    @NotNull
    public Field<String> field4() {
        return Link.LINK.OWNER_NAME;
    }

    @Override
    @NotNull
    public Field<String> field5() {
        return Link.LINK.REPOSITORY_NAME;
    }

    @Override
    @NotNull
    public Field<Long> field6() {
        return Link.LINK.ANSWER_COUNT;
    }

    @Override
    @NotNull
    public Field<Long> field7() {
        return Link.LINK.COMMITS_COUNT;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field8() {
        return Link.LINK.UPDATED_AT;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field9() {
        return Link.LINK.LAST_CHECK_TIME;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field10() {
        return Link.LINK.CREATED_AT;
    }

    @Override
    @NotNull
    public Field<String> field11() {
        return Link.LINK.CREATED_BY;
    }

    @Override
    @Nullable
    public Long component1() {
        return getId();
    }

    @Override
    @NotNull
    public String component2() {
        return getUrl();
    }

    @Override
    @Nullable
    public String component3() {
        return getQuestionId();
    }

    @Override
    @Nullable
    public String component4() {
        return getOwnerName();
    }

    @Override
    @Nullable
    public String component5() {
        return getRepositoryName();
    }

    @Override
    @Nullable
    public Long component6() {
        return getAnswerCount();
    }

    @Override
    @Nullable
    public Long component7() {
        return getCommitsCount();
    }

    @Override
    @NotNull
    public OffsetDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    @NotNull
    public OffsetDateTime component9() {
        return getLastCheckTime();
    }

    @Override
    @NotNull
    public OffsetDateTime component10() {
        return getCreatedAt();
    }

    @Override
    @NotNull
    public String component11() {
        return getCreatedBy();
    }

    @Override
    @Nullable
    public Long value1() {
        return getId();
    }

    @Override
    @NotNull
    public String value2() {
        return getUrl();
    }

    @Override
    @Nullable
    public String value3() {
        return getQuestionId();
    }

    @Override
    @Nullable
    public String value4() {
        return getOwnerName();
    }

    @Override
    @Nullable
    public String value5() {
        return getRepositoryName();
    }

    @Override
    @Nullable
    public Long value6() {
        return getAnswerCount();
    }

    @Override
    @Nullable
    public Long value7() {
        return getCommitsCount();
    }

    @Override
    @NotNull
    public OffsetDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    @NotNull
    public OffsetDateTime value9() {
        return getLastCheckTime();
    }

    @Override
    @NotNull
    public OffsetDateTime value10() {
        return getCreatedAt();
    }

    @Override
    @NotNull
    public String value11() {
        return getCreatedBy();
    }

    @Override
    @NotNull
    public LinkRecord value1(@Nullable Long value) {
        setId(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value2(@NotNull String value) {
        setUrl(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value3(@Nullable String value) {
        setQuestionId(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value4(@Nullable String value) {
        setOwnerName(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value5(@Nullable String value) {
        setRepositoryName(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value6(@Nullable Long value) {
        setAnswerCount(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value7(@Nullable Long value) {
        setCommitsCount(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value8(@NotNull OffsetDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value9(@NotNull OffsetDateTime value) {
        setLastCheckTime(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value10(@NotNull OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value11(@NotNull String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord values(
        @Nullable Long value1,
        @NotNull String value2,
        @Nullable String value3,
        @Nullable String value4,
        @Nullable String value5,
        @Nullable Long value6,
        @Nullable Long value7,
        @NotNull OffsetDateTime value8,
        @NotNull OffsetDateTime value9,
        @NotNull OffsetDateTime value10,
        @NotNull String value11
    ) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinkRecord
     */
    public LinkRecord() {
        super(Link.LINK);
    }

    /**
     * Create a detached, initialised LinkRecord
     */
    @ConstructorProperties({"id", "url", "questionId", "ownerName", "repositoryName", "answerCount", "commitsCount",
        "updatedAt", "lastCheckTime", "createdAt", "createdBy"})
    public LinkRecord(
        @Nullable Long id,
        @NotNull String url,
        @Nullable String questionId,
        @Nullable String ownerName,
        @Nullable String repositoryName,
        @Nullable Long answerCount,
        @Nullable Long commitsCount,
        @NotNull OffsetDateTime updatedAt,
        @NotNull OffsetDateTime lastCheckTime,
        @NotNull OffsetDateTime createdAt,
        @NotNull String createdBy
    ) {
        super(Link.LINK);

        setId(id);
        setUrl(url);
        setQuestionId(questionId);
        setOwnerName(ownerName);
        setRepositoryName(repositoryName);
        setAnswerCount(answerCount);
        setCommitsCount(commitsCount);
        setUpdatedAt(updatedAt);
        setLastCheckTime(lastCheckTime);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LinkRecord
     */
    public LinkRecord(edu.java.scrapper.domain.jooq.tables.pojos.Link value) {
        super(Link.LINK);

        if (value != null) {
            setId(value.getId());
            setUrl(value.getUrl());
            setQuestionId(value.getQuestionId());
            setOwnerName(value.getOwnerName());
            setRepositoryName(value.getRepositoryName());
            setAnswerCount(value.getAnswerCount());
            setCommitsCount(value.getCommitsCount());
            setUpdatedAt(value.getUpdatedAt());
            setLastCheckTime(value.getLastCheckTime());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            resetChangedOnNotNull();
        }
    }
}
